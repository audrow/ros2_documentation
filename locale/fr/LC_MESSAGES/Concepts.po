# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-05-22 05:29+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: fr\n"
"Language-Team: fr <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/Concepts.rst:4
msgid "Concepts"
msgstr ""

#: ../../source/Concepts.rst:6
msgid ""
"Conceptual overviews provide relatively high-level, general background "
"information about key aspects of ROS 2."
msgstr ""

#: ../../source/Concepts.rst:29
msgid ""
"The Core Stack Developer Concepts are much more detailed conceptual "
"articles intended for developers who plan modify or contribute to the ROS"
" 2 core:"
msgstr ""

#: ../../source/Concepts.rst:40
msgid "Quick overview of ROS 2 Concepts"
msgstr ""

#: ../../source/Concepts.rst:45
msgid ""
"ROS 2 is a middleware based on an anonymous publish/subscribe mechanism "
"that allows for message passing between different ROS processes."
msgstr ""

#: ../../source/Concepts.rst:47
msgid ""
"At the heart of any ROS 2 system is the ROS graph. The ROS graph refers "
"to the network of nodes in a ROS system and the connections between them "
"by which they communicate."
msgstr ""

#: ../../source/Concepts.rst:51
msgid "Graph Concepts"
msgstr ""

#: ../../source/Concepts.rst:54
msgid "Nodes: A node is an entity that uses ROS to communicate with other nodes."
msgstr ""

#: ../../source/Concepts.rst:55
msgid "Messages: ROS data type used when subscribing or publishing to a topic."
msgstr ""

#: ../../source/Concepts.rst:56
msgid ""
"Topics: Nodes can publish messages to a topic as well as subscribe to a "
"topic to receive messages."
msgstr ""

#: ../../source/Concepts.rst:57
msgid ""
"Discovery: The automatic process through which nodes determine how to "
"talk to each other."
msgstr ""

#: ../../source/Concepts.rst:60
msgid "Nodes"
msgstr ""

#: ../../source/Concepts.rst:62
msgid ""
"A node is a participant in the ROS graph. ROS nodes use a ROS client "
"library to communicate with other nodes. Nodes can publish or subscribe "
"to Topics. Nodes can also provide or use Services and Actions. There are "
"configurable Parameters associated with a node. Connections between nodes"
" are established through a distributed discovery process. Nodes may be "
"located in the same process, in different processes, or on different "
"machines. These concepts will be described in more detail in the sections"
" that follow."
msgstr ""

#: ../../source/Concepts.rst:72
msgid "Client Libraries"
msgstr ""

#: ../../source/Concepts.rst:74
msgid ""
"ROS client libraries allow nodes written in different programming "
"languages to communicate. There is a core ROS client library (RCL) that "
"implements common functionality needed for the ROS APIs of different "
"languages. This makes it so that language-specific client libraries are "
"easier to write and that they have more consistent behavior."
msgstr ""

#: ../../source/Concepts.rst:78
msgid "The following client libraries are maintained by the ROS 2 team:"
msgstr ""

#: ../../source/Concepts.rst:81
msgid "rclcpp = C++ client library"
msgstr ""

#: ../../source/Concepts.rst:82
msgid "rclpy = Python client library"
msgstr ""

#: ../../source/Concepts.rst:84
msgid ""
"Additionally, other client libraries have been developed by the ROS "
"community. See the :doc:`ROS 2 Client Libraries <Concepts/About-ROS-2"
"-Client-Libraries>` article for more details."
msgstr ""

#: ../../source/Concepts.rst:88
msgid "Discovery"
msgstr ""

#: ../../source/Concepts.rst:90
msgid ""
"Discovery of nodes happens automatically through the underlying "
"middleware of ROS 2. It can be summarized as follows:"
msgstr ""

#: ../../source/Concepts.rst:93
msgid ""
"When a node is started, it advertises its presence to other nodes on the "
"network with the same ROS domain (set with the ROS_DOMAIN_ID environment "
"variable). Nodes respond to this advertisement with information about "
"themselves so that the appropriate connections can be made and the nodes "
"can communicate."
msgstr ""

#: ../../source/Concepts.rst:95
msgid ""
"Nodes periodically advertise their presence so that connections can be "
"made with new-found entities, even after the initial discovery period."
msgstr ""

#: ../../source/Concepts.rst:96
msgid "Nodes advertise to other nodes when they go offline."
msgstr ""

#: ../../source/Concepts.rst:98
msgid ""
"Nodes will only establish connections with other nodes if they have "
"compatible :doc:`Quality of Service <../Tutorials/Demos/Quality-of-"
"Service>` settings."
msgstr ""

#: ../../source/Concepts.rst:100
msgid ""
"Take the :ref:`talker-listener demo <talker-listener>` for example. "
"Running the C++ talker node in one terminal will publish messages on a "
"topic, and the Python listener node running in another terminal  will "
"subscribe to messages on the same topic."
msgstr ""

#: ../../source/Concepts.rst:104
msgid ""
"You should see that these nodes discover each other automatically, and "
"begin to exchange messages."
msgstr ""

#: ../../source/Concepts.rst:107
msgid "Security"
msgstr ""

#: ../../source/Concepts.rst:109
msgid ""
"ROS 2 includes the ability to secure communications among nodes within "
"the ROS 2 computational graph. Similar to discovery, security happens "
"through the underlying ROS 2 middleware (provided it has support for the "
"corresponding security plugins). No additional software installation is "
"needed to enable security; however, the middleware requires configuration"
" files for each ROS graph participant. These files enable encryption and "
"authentication, and define policies both for individual nodes and for the"
" overall ROS graph. ROS 2 also adds a master \"on/off\" switch to control"
" security behavior."
msgstr ""

#: ../../source/Concepts.rst:115
msgid ""
"ROS utilities can create the authoritative `trust anchor "
"<https://en.wikipedia.org/wiki/Trust_anchor>`_ for a ROS application, or "
"an external certificate authority can be used."
msgstr ""

#: ../../source/Concepts.rst:117
msgid ""
"See the :doc:`ROS 2 Security <Concepts/About-Security>` article for "
"additional details or ROS security features."
msgstr ""

#: ../../source/Concepts.rst:121
msgid "Related Content"
msgstr ""

#: ../../source/Concepts.rst:123
msgid ""
":doc:`See the ROS 2 citations <Citations>` for more explanation of "
"concepts and citable resources."
msgstr ""

#: ../../source/Concepts.rst:125
msgid ""
"For a brief video introduction to ROS 2, see this community contributed "
"content:"
msgstr ""

#: ../../source/Concepts.rst:127
msgid ""
"`Getting started with ROS Part 1: Nodes, Parameters and Topics "
"<https://youtu.be/46TPAKXBOF8>`_"
msgstr ""

#: ../../source/Concepts.rst:128
msgid ""
"`Getting started with ROS Part 2: Services and Actions "
"<https://youtu.be/keZAJ83eEoM>`_"
msgstr ""

