# Archivo de traducción al español para la documentación de ROS 2.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# Cristian Chitiva <cychitivav@unal.edu.co>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-08-19 11:55+0000\n"
"Language-Team: es <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:8
#: 30e47d2a0f6d4fb9a3d1bafc3f7656fe
msgid "Code style and language versions"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:12
#: 704cb72a941246a29348c01616f502ac
msgid "Table of Contents"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:14
#: d7384ee2e3564d3abcdf2c29a9527270
msgid ""
"In order to achieve a consistent looking product we will all follow "
"externally (if possible) defined style guidelines for each language. For "
"other things like package layout or documentation layout we will need to "
"come up with our own guidelines, drawing on current, popular styles in "
"use now."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:17
#: bfa03eb6bce143c7b510fd4712adb4bf
msgid ""
"Additionally, wherever possible, developers should use integrated tools "
"to allow them to check that these guidelines are followed in their "
"editors. For example, everyone should have a PEP8 checker built into "
"their editor to cut down on review iterations related to style."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:20
#: b184d3ffbb914b87a004ea6bf5ddd1bf
msgid ""
"Also where possible, packages should check style as part of their unit "
"tests to help with the automated detection of style issues (see "
"`ament_lint_auto "
"<https://github.com/ament/ament_lint/blob/{REPOS_FILE_BRANCH}/ament_lint_auto/doc/index.rst>`__)."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:23
#: e8d6c890f9e64231a23b7c85f22a98c2
msgid "C"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:26
#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:60
#: 14a1bc1ac6394263a8a7c04474c65b6e 7a8733775cd44972abe37dbd2d60ac4c
msgid "Standard"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:28
#: ddbf383262074e4689dddd33b80ba53f
msgid "We will target C99."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:31
#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:65
#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:329
#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:359
#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:376
#: 34b0e07a3edf40168bdeac986cf0fb55 36d7d36ef38846ddaabfbbb67f7360b4
#: 5445d849c7514a61a60a4838fc82184f 93c1d4b1a015452cb18c13fa646104db
#: a5323057449f47d2ab539a80934085b3
msgid "Style"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:33
#: 39359e5b76c5403fa2c5efb28b3a5bff
msgid ""
"We will use `Python's PEP7 <https://www.python.org/dev/peps/pep-0007/>`__"
" for our C style guide, with some modifications and additions:"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:35
#: 516648e74d6b4e8db91f6718f35c7f91
msgid "We will target C99, as we do not need to support C89 (as PEP7 recommends)"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:37
#: 4fd780dfddcc402eafb558b3e654a09d
msgid ""
"rationale: among other things it allows us to use both ``//`` and ``/* "
"*/`` style comments"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:38
#: f118663fc7404be1b2e7853af70abda3
msgid "rationale: C99 is pretty much ubiquitous now"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:40
#: f639840d42a64dc2a1383b5bdc6e175b
msgid "C++ style ``//`` comments are allowed"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:41
#: 992a6e449e5d453da5619aca294c6fb0
msgid ""
"(optional) Always place literals on the left-hand side of comparison "
"operators, e.g. ``0 == ret`` instead of ``ret == 0``"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:43
#: 7b19ae04a05d433d93edd03b49ab7e29
msgid "rationale: ``ret == 0`` too easily turns into ``ret = 0`` by accident"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:44
#: a6cdaab4b4f94a18b0c4445e11c829d4
msgid ""
"optional because when using ``-Wall`` (or equivalent) modern compilers "
"will warn you when this happens"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:46
#: 6d033dcf31e14fd9a280ec454899ad66
msgid ""
"All of the following modifications only apply if we are not writing "
"Python modules:"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:48
#: 710491ddff994081a9a772c5b53d08ce
msgid "Do not use ``Py_`` as a prefix for everything"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:50
#: 1ea028d7a57b4642a004ff0a4163a51b
msgid ""
"instead use a CamelCase version of the package name or other appropriate "
"prefix"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:52
#: 5dbbe32ebbb0429f8e8d14a2714c515c
msgid "The stuff about documentation strings doesn't apply"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:54
#: 20c35fdee7464b12b669e96fe6ba69e6
msgid ""
"We can use the `pep7 <https://github.com/mike-perdide/pep7>`__ python "
"module for style checking. The editor integration seems slim, we may need"
" to look into automated checking for C in more detail."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:57
#: a3c94f58251c45c6908df5cd66121092
msgid "C++"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:62
#: 5662ed7245ac4f4fa01dc9504c76032c
msgid "{DISTRO_TITLE} targets C++17."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:68
#: 0bfac752366b41c688f9eadd40b15490
msgid ""
"We will use the `Google C++ Style Guide "
"<https://google.github.io/styleguide/cppguide.html>`__, with some "
"modifications:"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:71
#: d4f7cd1aabcd459484986ab6d7a7fc40
msgid "Line Length"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:73
#: c0c049ae95744d2591454ddf58389450
msgid "Our maximum line length is 100 characters."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:76
#: 3c7031566c36496f98b8c55007115629
msgid "File Extensions"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:78
#: 0fb27e41fe804ce39151a74e67c1d5c9
msgid "Header files should use the .hpp extension."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:80
#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:84
#: b625a1f582b946ee972ccb70d718a6d6 fcc1eb7b469643e9a92b1069364792c0
msgid "rationale: Allow tools to determine content of files, C++ or C."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:82
#: cb50e7988c774fd781163d1094ccc031
msgid "Implementation files should use the .cpp extension."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:87
#: 27147a5558de483fab210711ebc3d964
msgid "Variable Naming"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:89
#: fad46c8862dc4092b3ef9cbf710c138c
msgid "For global variables use lowercase with underscores prefixed with ``g_``"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:91
#: 78c54d691a0a4dc587d0755141fac287
msgid "rationale: keep variable naming case consistent across the project"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:92
#: 1f6de97412014d39a2b2e947affd2cca
msgid "rationale: easy to tell the scope of a variable at a glance"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:93
#: 2be4fcb522d5420eb2cc78f91f9a22cc
msgid "consistency across languages"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:96
#: 50bf50fa6544447989faa304cabe7c3a
msgid "Function and Method Naming"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:98
#: cba7d0e2775249bbae1b40fccf46a5c8
msgid ""
"Google style guide says ``CamelCase``, but the C++ std library's style of"
" ``snake_case`` is also allowed"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:100
#: 994966805ddb4ffdb08f128e0740011d
msgid "rationale: ROS 2 core packages currently use ``snake_case``"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:102
#: 6d78a4bd6508411997ada897ce7d4d51
msgid ""
"reason: either an historical oversight or a personal preference that "
"didn't get checked by the linter"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:103
#: 6777d562a27b4e4294c0e0fb9c1d097c
msgid "reason for not changing: retroactively changing would be too disruptive"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:104
#: a08472f15c3c49b68bf9dd4ca833bc73
msgid "other considerations:"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:106
#: 221da7fcebd44b91bf0bdf11c5afb28a
msgid ""
"``cpplint.py`` does not check this case (hard to enforce other than with "
"review)"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:107
#: a50b8733f4a14ae6bcb8342ad482ee01
msgid "``snake_case`` can result in more consistency across languages"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:108
#: 57c0083b86c343dbb21c822ad3a271a4
msgid "specific guidance:"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:110
#: c245ba88100448c6a9bdc4b089cf3ac2
msgid "for existing projects, prefer the existing style"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:111
#: 522f494777554cb28d3fa1689c7c8887
msgid ""
"for new projects, either is acceptable, but a preference for matching "
"related existing projects is advised"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:112
#: 4ee59a1711f940bfae9e0cd77b4f0df0
msgid "final decision is always developer discretion"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:114
#: f98d6cfa2fb14e7dac1ed472ce3a4992
msgid ""
"special cases like function pointers, callable types, etc. may require "
"bending the rules"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:115
#: ff23c78ab17f4a17b091e4eaf86d671a
msgid "Note that classes should still use ``CamelCase`` by default"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:118
#: 44d55bc21f554f599dcad8f54ada9308
msgid "Access Control"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:120
#: 3f2b18be325a4153b4585b41aa9ea114
msgid ""
"Drop requirement for all class members to be private and therefore "
"require accessors"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:122
#: c3bdb000174c4dd6807500feafc5969a
msgid "rationale: this is overly constraining for user API design"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:123
#: 67a955736ec34f95a0e77249c6c9ff74
msgid ""
"we should prefer private members, only making them public when they are "
"needed"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:124
#: 5a0887dfe8c5448ea66d922731ab848a
msgid ""
"we should consider using accessors before choosing to allow direct member"
" access"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:125
#: 10f5d0ed88f84d1d82fe3c5c4117fe25
msgid ""
"we should have a good reason for allowing direct member access, other "
"than because it is convenient for us"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:128
#: 2f37118cb8ac422d9f81a47d2a35236b
msgid "Exceptions"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:130
#: 47b418c0066f47ba969fa21310d7a903
msgid "Exceptions are allowed"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:132
#: 7cc805a20e6544f786582ff1924354c8
msgid ""
"rationale: this is a new codebase, so the legacy argument doesn't apply "
"to us"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:133
#: 922f09acb69348e7824d253247559ca1
msgid ""
"rationale: for user-facing API's it is more idiomatic C++ to have "
"exceptions"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:134
#: bce7b65c20324f3cb9af643e22c90c6c
msgid "Exceptions in destructors should be explicitly avoided"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:136
#: 4dfeb28a65bc4203ab3fea4dcdcb3062
msgid ""
"We should consider avoiding Exceptions if we intend to wrap the resulting"
" API in C"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:138
#: 00e1566c40374dcebe484e4596aa1318
msgid "rationale: it will make it easier to wrap in C"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:139
#: 6aa5d5adacff421ea1c2422c3f80197d
msgid ""
"rationale: most of our dependencies in code we intend to wrap in C do not"
" use exceptions anyways"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:142
#: d600e924b87246f2b1598d6e75ac9d5e
msgid "Function-like Objects"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:144
#: bf09320b0d6641688e03d3a2fb2de6cf
msgid "No restrictions on Lambda's or ``std::function`` or ``std::bind``"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:147
#: c6acc88b711343c3b56ed621d593ca20
msgid "Boost"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:149
#: bd39e327d76741df810cede8e35ab9fd
msgid "Boost should be avoided unless absolutely required."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:152
#: 692f48b08d5d4268b65bc94b942d7f90
msgid "Comments and Doc Comments"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:154
#: 696526f700c04001b0830f539773812b
msgid ""
"Use ``///`` and ``/** */`` comments for *documentation* purposes and "
"``//`` style comments for notes and general comments"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:156
#: 2e2f9a5d9c234cffa04d427968cbbb6b
msgid ""
"Class and Function comments should use ``///`` and ``/** */`` style "
"comments"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:157
#: 633c60e05c8b4e19a4682d0e1a96b35e
msgid "rationale: these are recommended for Doxygen and Sphinx in C/C++"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:158
#: c99c633c738245658f17ecc6cd4cd87f
msgid ""
"rationale: mixing ``/* */`` and ``//`` is convenient for block commenting"
" out code which contains comments"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:159
#: 05d8b30ac96140cd8cd70f8f311d678d
msgid ""
"Descriptions of how the code works or notes within classes and functions "
"should use ``//`` style comments"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:162
#: 7ab085bfb1044c0880cc423133a2da62
msgid "Pointer Syntax Alignment"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:164
#: 28cd0d77dab242e29197127a42ff7e92
msgid ""
"Use ``char * c;`` instead of ``char* c;`` or ``char *c;`` because of this"
" scenario ``char* c, *d, *e;``"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:167
#: 16ce864e6cde4064bbcdadacfc407973
msgid "Class Privacy Keywords"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:169
#: 55f5c8941e304a7fb83d480ab1b1e4e3
msgid ""
"Do not put 1 space before ``public:``, ``private:``, or ``protected:``, "
"it is more consistent for all indentions to be a multiple of 2"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:171
#: e3289db0727e46bf9d677ccecde8b372
msgid ""
"rationale: most editors don't like indentions which are not a multiple of"
" the (soft) tab size"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:172
#: 6152ba582c97497d860e9e6904f6baa9
msgid ""
"Use zero spaces before ``public:``, ``private:``, or ``protected:``, or 2"
" spaces"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:173
#: d3c2573caf104895b805a7a39e6fdb7e
msgid ""
"If you use 2 spaces before, indent other class statements by 2 additional"
" spaces"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:174
#: 14d148ae806540d480c93662977cf099
msgid ""
"Prefer zero spaces, i.e. ``public:``, ``private:``, or ``protected:`` in "
"the same column as the class"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:177
#: 87061f0b23dd4a1ba8ff8e42287b7af6
msgid "Nested Templates"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:179
#: bf0cf4638f664afbaf2d615e6556ba8a
msgid "Never add whitespace to nested templates"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:181
#: e0db115be10f454990d96eec767c943f
msgid ""
"Prefer ``set<list<string>>`` (C++11 feature) to ``set<list<string> >`` or"
" ``set< list<string> >``"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:184
#: bd53582c9eaa4aefa3f86a230a4aece8
msgid "Always Use Braces"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:186
#: ae81d4887722456bb4fafcc7d4ab1900
msgid ""
"Always use braces following ``if``, ``else``, ``do``, ``while``, and "
"``for``, even when the body is a single line."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:188
#: 7a69a70f705d486e8289d937a0dd0b01
msgid ""
"rationale: less opportunity for visual ambiguity and for complications "
"due to use of macros in the body"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:191
#: 4bfa5afad1ed4ea0807d0a59e4a34be9
msgid "Open Versus Cuddled Braces"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:193
#: 9a83d3f6c2b64395bda8ec3adfd40099
msgid ""
"Use open braces for ``function``, ``class``, ``enum``, and ``struct`` "
"definitions, but cuddle braces on ``if``, ``else``, ``while``, ``for``, "
"etc..."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:195
#: c757668d60fc4d288c2a362721af9faa
msgid ""
"Exception: when an ``if`` (or ``while``, etc.) condition is long enough "
"to require line-wrapping, then use an open brace (i.e., don't cuddle)."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:197
#: 62d5c7989f994d8f8254ec9c8baf6a31
msgid ""
"When a function call cannot fit on one line, wrap at the open parenthesis"
" (not in between arguments) and start them on the next line with a "
"2-space indent.  Continue with the 2-space indent on subsequent lines for"
" more arguments.  (Note that the `Google style guide "
"<https://google.github.io/styleguide/cppguide.html#Function_Calls>`__ is "
"internally contradictory on this point.)"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:199
#: b4615811cd1247fbb2fac9bd2ae77e2e
msgid ""
"Same goes for ``if`` (and ``while``, etc.) conditions that are too long "
"to fit on one line."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:202
#: ad9fddb9bc594d74b9f7c7c73eb93f90
msgid "Examples"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:204
#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:259
#: 6cd159d955dc47fd9edf7c1cd61a9bbe c6f49683379e4de7900cb7d0dcefb796
msgid "This is OK:"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:242
#: 59f3fbc2921345fd99377b3240c4db35
msgid "This is **not** OK:"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:257
#: 7fd1bf99d1e44745a02dfc468dbb801d
msgid ""
"Use open braces rather than excessive indention, e.g. for distinguishing "
"constructor code from constructor initializer lists"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:281
#: 47b2f1cea7154fe1bf925e34e6fadd35
msgid "This is **not** OK, even weird (the google way?):"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:302
#: b3517e57b11e4c828ce250be50cb8bbe
msgid "Linters"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:304
#: d25ccc4d9a0740fc868cc7fa2aae414d
msgid ""
"We check these styles with a combination of Google's `cpplint.py "
"<https://github.com/google/styleguide>`__ and `uncrustify "
"<https://github.com/uncrustify/uncrustify>`__."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:306
#: f5d430d9aaec4916975468311a33c689
msgid "We provide command line tools with custom configurations:"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:308
#: bc95fb466ff0430396c3325f10dc627b
msgid ""
"`ament_clang_format "
"<https://github.com/ament/ament_lint/blob/{REPOS_FILE_BRANCH}/ament_clang_format/doc/index.rst>`__:"
" `configuration "
"<https://github.com/ament/ament_lint/blob/{REPOS_FILE_BRANCH}/ament_clang_format/ament_clang_format/configuration"
"/.clang-format>`__"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:309
#: cddf8beffbb04bfaa6b14d15c8e21d6e
msgid ""
"`ament_cpplint "
"<https://github.com/ament/ament_lint/blob/{REPOS_FILE_BRANCH}/ament_cpplint/doc/index.rst>`__"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:310
#: b88954d3d7ca46519c114bb5546985c7
msgid ""
"`ament_uncrustify "
"<https://github.com/ament/ament_lint/blob/{REPOS_FILE_BRANCH}/ament_uncrustify/doc/index.rst>`__:"
" `configuration "
"<https://github.com/ament/ament_lint/blob/{REPOS_FILE_BRANCH}/ament_uncrustify/ament_uncrustify/configuration/ament_code_style.cfg>`__"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:312
#: 28cc16d498464f0882b79179a21fa150
msgid ""
"Some formatters such as ament_uncrustify and ament_clang_format support "
"``--reformat`` options to apply changes in place."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:314
#: 59a673028880423285d3ec93fe7b6e1a
msgid ""
"We also run other tools to detect and eliminate as many warnings as "
"possible. Here's a non-exhaustive list of additional things we try to do "
"on all of our packages:"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:317
#: 71ff14061c6c4cb7b703a4da62795526
msgid "use compiler flags like ``-Wall -Wextra -Wpedantic``"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:318
#: b6b6225b64ac4f9087a37011d1964580
msgid ""
"run static code analysis like ``cppcheck``, which we have integrated in "
"`ament_cppcheck "
"<https://github.com/ament/ament_lint/blob/{REPOS_FILE_BRANCH}/ament_cppcheck/doc/index.rst>`__."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:321
#: f6aa2f4738be40e082dcd37f49de546a
msgid "Python"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:324
#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:354
#: 0c7cb4c9bf9d4df2a27c1966ebfa20d7 0d5616ba1a7e48669c10f5abf3e7dd05
msgid "Version"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:326
#: 25b382b6c17b4f57a4939d3e72a248a0
msgid "We will target Python 3 for our development."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:331
#: cac30741a0bc44eabf69fae1f0be7c70
msgid ""
"We will use the `PEP8 guidelines "
"<https://www.python.org/dev/peps/pep-0008/>`_ for code format."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:333
#: d9e35a9d38c148bfa9869b01cf4e4a67
msgid "We chose the following more precise rule where PEP 8 leaves some freedom:"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:335
#: 3ba53b13a1c74b6780afcfa36d65cc88
msgid ""
"`We allow up to 100 characters per line (fifth paragraph) "
"<https://www.python.org/dev/peps/pep-0008/#maximum-line-length>`_."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:336
#: 1a9dd5102b88481186a205ca6ea24f65
msgid ""
"`We pick single quotes over double quotes as long as no escaping is "
"necessary <https://www.python.org/dev/peps/pep-0008/#string-quotes>`_."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:337
#: fc7c8084bdca42038ea6df7bbdab3ab6
msgid ""
"`We prefer hanging indents for continuation lines "
"<https://www.python.org/dev/peps/pep-0008/#indentation>`_."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:339
#: 30d99af4a1404c3faa34aaac421a95ca
msgid ""
"Tools like the ``(ament_)pycodestyle`` Python package should be used in "
"unit-test and/or editor integration for checking Python code style."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:341
#: b0395cabc8a94b588e4f9fcb459ec09f
msgid ""
"The pycodestyle configuration used in the linter is `here "
"<https://github.com/ament/ament_lint/blob/{REPOS_FILE_BRANCH}/ament_pycodestyle/ament_pycodestyle/configuration/ament_pycodestyle.ini>`__."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:343
#: 8a14b192f7594d0cba5518f0c6e48fe9
msgid "Integration with editors:"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:345
#: 253df067bea344af89937573b4c78d80
msgid "atom: https://atom.io/packages/linter-pycodestyle"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:346
#: e728cad52e584015a9ba53377b8c44bc
msgid "emacs: https://www.emacswiki.org/emacs/PythonProgrammingInEmacs"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:347
#: 417e0970fa4a423995c0b33e3ce9695a
msgid "Sublime Text: https://sublime.wbond.net/packages/SublimeLinter-flake8"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:348
#: 487a03e5a7784256871e357c66df14aa
msgid "vim: https://github.com/nvie/vim-flake8"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:351
#: 9110301eb1d949ae9a7292b55bddb7db
msgid "CMake"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:356
#: f4e76f910ae64866bef7a0371d03f294
msgid "We will target CMake 3.8."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:361
#: fd7c33ffb05b4832a419cef2e363bc0c
msgid "Since there is not an existing CMake style guide we will define our own:"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:363
#: e5f3a6a645f5438f9cd2795d30728bc7
msgid "Use lowercase command names (``find_package``, not ``FIND_PACKAGE``)."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:364
#: 6dd2c8f7bbee4c47aeebdced1c633e40
msgid "Use ``snake_case`` identifiers (variables, functions, macros)."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:365
#: 16e92baad1cc4fc99cabfaf7f45392cb
msgid "Use empty ``else()`` and ``end...()`` commands."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:366
#: cda167e79eb8478c8489d97221ae15b8
msgid "No whitespace before ``(``\\ 's."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:367
#: 271ff1b4bf9c4d549f5b386fd3ea7aeb
msgid "Use two spaces of indention, do not use tabs."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:368
#: b1b0c354f6be444c8779831097d95dce
msgid ""
"Do not use aligned indentation for parameters of multi-line macro "
"invocations. Use two spaces only."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:369
#: 16a83f8d132a4b2aa5d7c519e2c4d3d9
msgid "Prefer functions with ``set(PARENT_SCOPE)`` to macros."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:370
#: 1d74bdc2bc314a8bb2d7cb49e698ecb4
msgid ""
"When using macros prefix local variables with ``_`` or a reasonable "
"prefix."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:373
#: 3032e9e9d7154865bc115bfbfcbb942f
msgid "Markdown / reStructured Text / docblocks"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:378
#: cbb4d3e5c16a4fc4bb1c7c5638745494
msgid ""
"The following rules to format text is intended to increase readability as"
" well as versioning."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:380
#: 776a79a519c5492b821a9f03b6c23b8f
msgid ""
"*[.md, .rst only]* Each section title should be preceded by one empty "
"line and succeeded by one empty line."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:382
#: 1163d2dc6e3046dbbc3067ed1bc3fc70
msgid ""
"Rationale: It expedites to get an overview about the structure when "
"screening the document."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:384
#: e82f16bbf9e542d7ac53c9407bfe8f03
msgid ""
"*[.rst only]* In reStructured Text the headings should follow the "
"hierarchy described in the `Sphinx style guide <https://documentation-"
"style-guide-sphinx.readthedocs.io/en/latest/style-"
"guide.html#headings>`__:"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:386
#: f848b9a410ea4300a69eeda5b71f4511
msgid "``#`` with overline (only once, used for the document title)"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:387
#: 99f9b33a4c77474480195b34bfdd06e7
msgid "``*`` with overline"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:388
#: 942a204e164942429e2c9d646c6fdc67
msgid "``=``"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:389
#: 2b305c8ba78446f495ca947e7afacdcb
msgid "``-``"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:390
#: d27838325526411a815ef379528a24f6
msgid "``^``"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:391
#: a255a7655a17450b950dc909d45c6d7d
msgid "``\"``"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:392
#: a42a34dc260c4784aeb6d11353683409
msgid ""
"Rationale: A consistent hierarchy expedites getting an idea about the "
"nesting level when screening the document."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:394
#: 02c33ea22e4e440496cccb7371398b12
msgid ""
"*[.md only]* In Markdown the headings should follow the ATX-style "
"described in the `Markdown syntax documentation "
"<https://daringfireball.net/projects/markdown/syntax#header>`__"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:396
#: bb74b7755ab045cfbcdb56161e5e0253
msgid ""
"ATX-style headers use 1-6 hash characters (``#``) at the start of the "
"line to denote header levels 1-6."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:397
#: 0cab989adf3c432390ad5faebeb6bd0b
msgid ""
"A space between the hashes and the header title should be used (such as "
"``# Heading 1``) to make it easier to visually separate them."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:398
#: f2df1b31439044e2bfe8cc632c73e80a
msgid ""
"Justification for the ATX-style preference comes from the `Google "
"Markdown style guide <https://github.com/google/styleguide/blob/gh-"
"pages/docguide/style.md#atx-style-headings>`__"
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:399
#: 2862ce65cd384f369a0af0ccc7a1a299
msgid ""
"Rationale: ATX-style headers are easier to search and maintain, and make "
"the first two header levels consistent with the other levels."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:401
#: 12a07aba940846f6b7c2bdc32aeb1043
msgid "*[any]* Each sentence must start on a new line."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:403
#: ec708097e276437799445db33b22bf2a
msgid ""
"Rationale: For longer paragraphs a single change in the beginning makes "
"the diff unreadable since it carries forward through the whole paragraph."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:405
#: 581336e656d6467ea0b6201104791375
msgid "*[any]* Each sentence can optionally be wrapped to keep each line short."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:406
#: c897c771ff494088b2bfa9824a800281
msgid "*[any]* The lines should not have any trailing white spaces."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:407
#: c776e2f88da544de8333a14ded74e62d
msgid ""
"*[.md, .rst only]* A code block must be preceded and succeeded by an "
"empty line."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:409
#: 10e96a36f335425eb53541a4e5ee2a02
msgid ""
"Rationale: Whitespace is significant only directly before and directly "
"after fenced code blocks. Following these instructions will ensure that "
"highlighting works properly and consistently."
msgstr ""

#: ../../source/The-ROS2-Project/Contributing/Code-Style-Language-Versions.rst:412
#: 70be8706e8414732b859f1c912e049f8
msgid "*[.md, .rst only]* A code block should specify a syntax (e.g. ``bash``)."
msgstr ""

#~ msgid ""
#~ "Also where possible, packages should "
#~ "check style as part of their unit"
#~ " tests to help with the automated "
#~ "detection of style issues (see "
#~ "`ament_lint_auto "
#~ "<https://github.com/ament/ament_lint/blob/rolling/ament_lint_auto/doc/index.rst>`__)."
#~ msgstr ""

#~ msgid "Rolling targets C++17."
#~ msgstr ""

#~ msgid ""
#~ "`ament_clang_format "
#~ "<https://github.com/ament/ament_lint/blob/rolling/ament_clang_format/doc/index.rst>`__:"
#~ " `configuration "
#~ "<https://github.com/ament/ament_lint/blob/rolling/ament_clang_format/ament_clang_format/configuration"
#~ "/.clang-format>`__"
#~ msgstr ""

#~ msgid ""
#~ "`ament_cpplint "
#~ "<https://github.com/ament/ament_lint/blob/rolling/ament_cpplint/doc/index.rst>`__"
#~ msgstr ""

#~ msgid ""
#~ "`ament_uncrustify "
#~ "<https://github.com/ament/ament_lint/blob/rolling/ament_uncrustify/doc/index.rst>`__:"
#~ " `configuration "
#~ "<https://github.com/ament/ament_lint/blob/rolling/ament_uncrustify/ament_uncrustify/configuration/ament_code_style.cfg>`__"
#~ msgstr ""

#~ msgid ""
#~ "run static code analysis like "
#~ "``cppcheck``, which we have integrated "
#~ "in `ament_cppcheck "
#~ "<https://github.com/ament/ament_lint/blob/rolling/ament_cppcheck/doc/index.rst>`__."
#~ msgstr ""

#~ msgid ""
#~ "The pycodestyle configuration used in "
#~ "the linter is `here "
#~ "<https://github.com/ament/ament_lint/blob/rolling/ament_pycodestyle/ament_pycodestyle/configuration/ament_pycodestyle.ini>`__."
#~ msgstr ""

