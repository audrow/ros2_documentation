# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-08-19 11:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/Installation/Testing.rst:6 334bad6b7e9a40ab8c95d8c67dd8b3d2
msgid "Testing with pre-release binaries"
msgstr ""

#: ../../source/Installation/Testing.rst:8 24a3dcbaee2843d7b420b388f021711a
msgid ""
"Many ROS packages are provided as pre-built binaries. Usually, you will "
"get the released version of binaries when following "
":doc:`../Installation`. There are also pre-released versions of binaries "
"that are useful for testing before making an official release. This "
"article describes several options if you would like to try out pre-"
"released versions of ROS binaries."
msgstr ""

#: ../../source/Installation/Testing.rst:14 4af12ae9832d4df3be9b9262336923d6
msgid "Debian testing repository"
msgstr ""

#: ../../source/Installation/Testing.rst:16 d91ae150cb3f4767863bd5cb69ed142d
msgid ""
"When packages are released into a ROS distribution (using bloom), the "
"buildfarm builds them into debian packages which are stored temporarily "
"in the **building** apt repository. As dependent packages are rebuilt, an"
" automatic process periodically synchronizes the packages in **building**"
" to a secondary repository called **ros-testing**. **ros-testing** is "
"intended as a soaking area where developers and bleeding-edge users may "
"give the packages extra testing, before they are manually synced into the"
" public ros repository from which users typically install packages."
msgstr ""

#: ../../source/Installation/Testing.rst:20 f4c1fc68d2ed43108c2314006451fc4c
msgid ""
"Approximately every two weeks, the rosdistro's release manager manually "
"synchronizes the contents of **ros-testing** into the **main** ROS "
"repository."
msgstr ""

#: ../../source/Installation/Testing.rst:22 1ceda6e531da465e81c5f73c814b9cfa
msgid ""
"For Debian-based operating systems, you can install binary packages from "
"the **ros-testing** repository."
msgstr ""

#: ../../source/Installation/Testing.rst:24 574e54c936ee41248bd4285433cec3e5
msgid ""
"Make sure you have a working ROS 2 installation from Debian packages (see"
" :doc:`../Installation`)."
msgstr ""

#: ../../source/Installation/Testing.rst:26 391d5a35c4ea4768a2d6287e928252eb
msgid ""
"Edit (with sudo) the file ``/etc/apt/sources.list.d/ros2.list`` and "
"change ``ros2`` with ``ros2-testing``. For example, on Ubuntu Jammy the "
"contents should look like the following:"
msgstr ""

#: ../../source/Installation/Testing.rst:34 99e77753eb594a5cb3d157256a0844b5
msgid "Update the ``apt`` index:"
msgstr ""

#: ../../source/Installation/Testing.rst:40 fe79a4a0eb0d47f78b23949b564b2c54
msgid ""
"You can now install individual packages from the testing repository, for "
"example:"
msgstr ""

#: ../../source/Installation/Testing.rst:46 fb3c3eb8ebe74e0ca13960df1dc56d75
msgid ""
"Alternatively, you can move your entire ROS 2 installation to the testing"
" repository:"
msgstr ""

#: ../../source/Installation/Testing.rst:52 abccde0eabdb4ab08807957846d28c56
msgid ""
"Once you are finished testing, you can switch back to the normal "
"repository by changing back the contents of "
"``/etc/apt/sources.list.d/ros2.list``:"
msgstr ""

#: ../../source/Installation/Testing.rst:59 d9d50357e4804ce7ac8b9db69a4d6728
msgid "and doing an update and upgrade:"
msgstr ""

#: ../../source/Installation/Testing.rst:69 3ed2919f43f44a408787a61e245c9c90
msgid "Fat binaries"
msgstr ""

#: ../../source/Installation/Testing.rst:71 de123bc0f4094c4083d5bfc4b14bc8fc
msgid ""
"For core packages, we run nightly packaging jobs for Ubuntu Linux, RHEL, "
"and Windows. These packaging jobs produce archives with pre-built "
"binaries that can be downloaded and extracted to your filesystem."
msgstr ""

#: ../../source/Installation/Testing.rst:74 00cc59c3f64541929cc43b5a218f75c3
msgid ""
"Make sure you have all dependencies installed according to the "
":doc:`latest development setup <Alternatives/Latest-Development-Setup>` "
"for your platform."
msgstr ""

#: ../../source/Installation/Testing.rst:76 ea7728fc0d0e47d9b5d51873bb74877e
msgid ""
"Go to https://ci.ros2.org/view/packaging/ and select a packaging job from"
" the list corresponding to your platform."
msgstr ""

#: ../../source/Installation/Testing.rst:78 88f13384f9814cbead546bb780cb568b
msgid ""
"Under the heading \"Last Successful Artifacts\" you should see a download"
" link (e.g. for Windows, ``ros2-package-windows-AMD64.zip``)."
msgstr ""

#: ../../source/Installation/Testing.rst:80 68abac894f284e7d9a76fec68fd1708e
msgid "Download and extract the archive to your file system."
msgstr ""

#: ../../source/Installation/Testing.rst:82 94341f74a3d04bb6a951580d02d783ed
msgid ""
"To use the fat binary installation, source the ``setup.*`` file that can "
"be found in the root of the archive."
msgstr ""

#: ../../source/Installation/Testing.rst:86 c99566a0bb1c4069a4c98d5a5a775b64
msgid "Ubuntu Linux and RHEL"
msgstr ""

#: ../../source/Installation/Testing.rst:92 19050d814cde4cee98c3267665407ff0
msgid "Windows"
msgstr ""

#: ../../source/Installation/Testing.rst:99 c080efd99467429fbc424915564e7144
msgid "Docker"
msgstr ""

#: ../../source/Installation/Testing.rst:101 beb64e4e0f1146a98a660c03a1122f34
msgid ""
"For Ubuntu Linux, there is also a nightly Docker image based on the "
"nightly fat archive."
msgstr ""

#: ../../source/Installation/Testing.rst:103 1f9c6ce3abaf4c29880c01a3b88f3bd0
msgid "Pull the Docker image:"
msgstr ""

#: ../../source/Installation/Testing.rst:109 deebb00ee764498fa55df9cf268eb880
msgid "Start an interactive container:"
msgstr ""

#: ../../source/Installation/Testing.rst:115 e2e5318c0fa84f4b81876e0ca7739c0e
msgid ""
"For support on running GUI applications in Docker, take a look at the "
"tutorial `User GUI's with Docker "
"<https://wiki.ros.org/docker/Tutorials/GUI>`_ or the tool `rocker "
"<https://github.com/osrf/rocker>`_."
msgstr ""

