# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-08-19 11:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:8
#: a86dba6f5d51485d9e883f59528c972a
msgid "Recording a bag from a node (Python)"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:10
#: c36f606d60774de590fe674a063e2c30
msgid "**Goal:** Record data from your own Python node to a bag."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:12
#: cec9b7d56e4540f481f8aa1c28802223
msgid "**Tutorial level:** Advanced"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:14
#: 4fbca79c7b5d47a5a723e0d962e078a5
msgid "**Time:** 20 minutes"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:18
#: fd0452b2edbe48298663176ee02e9d20
msgid "Contents"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:21
#: 241a76008ca641ea95ee86a34d2104e7
msgid "Background"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:23
#: be7f6922252d45c8b1ddf7e3fdc1db80
msgid ""
"``rosbag2`` doesn't just provide the ``ros2 bag`` command line tool. It "
"also provides a Python API for reading from and writing to a bag from "
"your own source code. This allows you to subscribe to a topic and save "
"the received data to a bag at the same time as performing any other "
"processing of your choice on that data. You may do this, for example, to "
"save data from a topic and the result of processing that data without "
"needing to send the processed data over a topic just to record it. "
"Because any data can be recorded in a bag, it is also possible to save "
"data generated by another source than a topic, such as synthetic data for"
" training sets. This is useful, for example, for quickly generating a bag"
" that contains a large number of samples spread over a long playback "
"time."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:31
#: f2adac45f8f64a60828dcf9afa183dc1
msgid "Prerequisites"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:33
#: cf8f7366ca0346fd95681598c9b37836
msgid ""
"You should have the ``rosbag2`` packages installed as part of your "
"regular ROS 2 setup."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:35
#: 3b6b0b7cb1a945c0957b12227a81e8c9
msgid ""
"If you've installed from Debian packages on Linux, it may be installed by"
" default. If it is not, you can install it using this command."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:42
#: a607b3c1c7e24765a453900c59ac2b67
msgid ""
"This tutorial discusses using ROS 2 bags, including from the terminal. "
"You should have already completed the :doc:`basic ROS 2 bag tutorial "
"<../Beginner-CLI-Tools/Recording-And-Playing-Back-Data/Recording-And-"
"Playing-Back-Data>`."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:46
#: 1209664966cd428d8c2b68ae89f6a787
msgid "Tasks"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:49
#: a810342411844697ba823f8c185b64f3
msgid "1 Create a package"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:51
#: 7701ef3e0b5e4d32ae3d7eb0aa531c71
msgid ""
"Open a new terminal and :doc:`source your ROS 2 installation "
"<../Beginner-CLI-Tools/Configuring-ROS2-Environment>` so that ``ros2`` "
"commands will work."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:53
#: 214fdc356eff46ecba80ce4584b6fc38
msgid ""
"Follow :ref:`these instructions <new-directory>` to create a new "
"workspace named ``ros2_ws``."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:55
#: 5504e27a7945497c8ff66c392dacaa26
msgid "Navigate into the ``ros2_ws/src`` directory and create a new package:"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:61
#: 7fdfcdd89fd24842b6d02d02d79c8e67
msgid ""
"Your terminal will return a message verifying the creation of your "
"package ``bag_recorder_nodes_py`` and all its necessary files and "
"folders. The ``--dependencies`` argument will automatically add the "
"necessary dependency lines to the ``package.xml``. In this case, the "
"package will use the ``rosbag2_py`` package as well as the ``rclpy`` "
"package. A dependency on the ``example_interfaces`` package is also "
"required for message definitions."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:67
#: 1a8f247f743b4d009e5f3eb3510b7781
msgid "1.1 Update ``package.xml`` and ``setup.py``"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:69
#: 80edc07403664e73b0097861510bc374
msgid ""
"Because you used the ``--dependencies`` option during package creation, "
"you don't have to manually add dependencies to ``package.xml``. As "
"always, though, make sure to add the description, maintainer email and "
"name, and license information to ``package.xml``."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:78
#: 8bd30ce56b6049269384bfcce8e265d7
msgid "Also be sure to add this information to the ``setup.py`` file as well."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:88
#: c82b09f531f14826b56f16d85818603d
msgid "2 Write the Python node"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:90
#: 5332aa0a937741c7aeec12dbfa90deac
msgid ""
"Inside the ``ros2_ws/src/bag_recorder_nodes_py/bag_recorder_nodes_py`` "
"directory, create a new file called ``simple_bag_recorder.py`` and paste "
"the following code into it."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:143
#: c95ec8da0b894440b2db71d4088c5eeb
msgid "2.1 Examine the code"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:145
#: 0e920118974042c7b78f4f0f0c6dcb52
msgid ""
"The ``import`` statements at the top are the package dependencies. Note "
"the importation of the ``rosbag2_py`` package for the functions and "
"structures necessary to work with bag files."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:148
#: e60792d2cf784ebbb894088b2227e261
msgid ""
"In the class constructor, we begin by creating the writer object that we "
"will use to write to the bag. We are creating a ``SequentialWriter``, "
"which writes messages into the bag in the order they are received. Other "
"writers with different behaviours may be available in `rosbag2 "
"<https://github.com/ros2/rosbag2/tree/rolling/rosbag2_cpp/include/rosbag2_cpp/writers>`__."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:156
#: 5a150e8d0e584404b1179e3e29079178
msgid ""
"Now that we have a writer object, we can open the bag using it. We "
"specify the URI of the bag to create and the format (``mcap``), leaving "
"other options at their defaults. The default conversion options are used,"
" which will perform no conversion and store the messages in the "
"serialization format they are received in."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:168
#: 41d6b21a5c6146eba660489c703f06ed
msgid ""
"Next, we need to tell the writer about the topics we wish to store. This "
"is done by creating a ``TopicMetadata`` object and registering it with "
"the writer. This object specifies the topic name, topic data type, and "
"serialization format used."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:180
#: 8c4081dfc5084b24989015c2bd648705
msgid ""
"With the writer now set up to record data we pass to it, we create a "
"subscription and specify a callback for it. We will write data to the bag"
" in the callback."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:192
#: 7717ef7063c245e6b3a012a12110b488
msgid ""
"The callback receives the message in unserialized form (as is standard "
"for the ``rclpy`` API) and passes the message to the writer, specifying "
"the topic that the data is for and the timestamp to record with the "
"message. However, the writer requires serialised messages to store in the"
" bag. This means that we need to serialise the data before passing it to "
"the writer. For this reason, we call ``serialize_message()`` and pass the"
" result of that to the writer, rather than passing in the message "
"directly."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:205
#: 5164503390074ce8a82f86d4639e095e
msgid ""
"The file finishes with the ``main`` function used to create an instance "
"of the node and start ROS processing it."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:216
#: be182d62312e42c198b400e416b4031a
msgid "2.2 Add entry point"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:218
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:417
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:574
#: 0443fc8f24934e618c57deb1c04ef7dc 47d0bac3b9fa482682ed105293989d00
#: 5d905f8a87064e59a93dae5dbcc20c89
msgid ""
"Open the ``setup.py`` file in the ``bag_recorder_nodes_py`` package and "
"add an entry point for your node."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:230
#: 8abf2fd9d07948b6af008c77952c7140
msgid "3 Build and run"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:232
#: 7980b43df6ae4c8e9affbbeeb88016be
msgid ""
"Navigate back to the root of your workspace, ``ros2_ws``, and build your "
"new package."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:236
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:258
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:435
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:457
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:593
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:615
#: 70ddff153af34129b3ffe76b2c41fa4f bb59b62b02bc4c12bcabfe54aee06a1f
#: c285ddb25feb4371806c9bad3777654d c5828fbecb094a318afdfb8a24ea5776
#: cefadeccaec14e9e9ba0809167bbba63 d786c56123d34de881f3b166ecd3d973
msgid "Linux"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:242
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:264
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:441
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:463
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:599
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:621
#: 036b73c352b54f3d989066925cee7beb 546d00824c484932b849655de597a581
#: 7af887a264aa47c0a14e4ecede9f5fce b0ee3993964547dab25219d00c6c910d
#: b8198e7e1d1e489ead066d8f14155239 c3eb7276ad7a4241a10e42e2d72b8154
msgid "macOS"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:248
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:270
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:447
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:469
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:605
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:627
#: 0c830388232a416381bbdf073456eaec 6151f41eabb845a5a9d277f37b50eb9b
#: 778acea7727b4e3b88d04b66af9f8035 b86f96cc07a84a8599ae2cde2972fe9d
#: f5a151bb807340b69b3685bb6ce0f839 fcd86b4014204491a37b5724eb3b1baa
msgid "Windows"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:254
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:453
#: a211e84925564403875e0502c4b60691 c8196dd72fd4400ea00bdb2fbef37d7f
msgid "Open a new terminal, navigate to ``ros2_ws``, and source the setup files."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:276
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:477
#: 3bdb601b11ec46e482e0767d4f9e089f b17ea59dcb634095882428fffc87cb34
msgid "Now run the node:"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:282
#: c846803f08cd47a390e7955ef807dbf0
msgid "Open a second terminal and run the ``talker`` example node."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:288
#: 685f83180dde4750a64223d7ad3e80a2
msgid ""
"This will start publishing data on the ``chatter`` topic. As the bag-"
"writing node receives this data, it will write it to the ``my_bag`` bag. "
"If the ``my_bag`` directory already exists, you must first delete it "
"before running the ``simple_bag_recorder`` node. This is because "
"``rosbag2`` will not overwrite existing bags by default, and so the "
"destination directory cannot exist."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:293
#: 065a89de07ea410db6b12386db1bdd63
msgid ""
"Terminate both nodes. Then, in one terminal start the ``listener`` "
"example node."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:300
#: 7ebac8111a0f445a87132e46d453893b
msgid ""
"In the other terminal, use ``ros2 bag`` to play the bag recorded by your "
"node."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:306
#: de91d7e4834a4d39b3cbb077eb05add5
msgid ""
"You will see the messages from the bag being received by the ``listener``"
" node."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:308
#: 507e07877438426d88affc2f35419d8b
msgid ""
"If you wish to run the bag-writing node again, you will first need to "
"delete the ``my_bag`` directory."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:311
#: a07fc023c00e429fb4128ef68726e60e
msgid "4 Record synthetic data from a node"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:313
#: 5e811220987742ee8e90835e1df2dc41
msgid ""
"Any data can be recorded into a bag, not just data received over a topic."
" A common use case for writing to a bag from your own node is to generate"
" and store synthetic data. In this section you will learn how to write a "
"node that generates some data and stores it in a bag. We will demonstrate"
" two approaches for doing this. The first uses a node with a timer; this "
"is the approach that you would use if your data generation is external to"
" the node, such as reading data directly from hardware (e.g. a camera). "
"The second approach does not use a node; this is the approach you can use"
" when you do not need to use any functionality from the ROS "
"infrastructure."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:321
#: 83ae9a6f646a4aa0bdcc7c1709a1b1f7
msgid "4.1 Write a Python node"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:323
#: 528e4f2a9a9044b6a114af7846dd6bf5
msgid ""
"Inside the ``ros2_ws/src/bag_recorder_nodes_py/bag_recorder_nodes_py`` "
"directory, create a new file called ``data_generator_node.py`` and paste "
"the following code into it."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:374
#: 755a6c22843242359761c3c1e7ed372b
msgid "4.2 Examine the code"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:376
#: ef0d3fd88dc54ca1973efc433ac3c391
msgid ""
"Much of this code is the same as the first example. The important "
"differences are described here."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:379
#: febcdf455ff54f2b8ba056d68d9775a4
msgid "First, the name of the bag is changed."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:387
#: 6b019b62f74e45d280316dcc9651f8ea
msgid "The name of the topic is also changed, as is the data type stored."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:397
#: ea0bcc30e7944793804e70c318ef41aa
msgid ""
"Rather than a subscription to a topic, this node has a timer. The timer "
"fires with a one-second period, and calls the given member function when "
"it does."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:404
#: ead05179acfa47f48916368dd99fa331
msgid ""
"Within the timer callback, we generate (or otherwise obtain, e.g. read "
"from a serial port connected to some hardware) the data we wish to store "
"in the bag. As with the previous example, the data is not yet serialised,"
" so we must serialise it before passing it to the writer."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:415
#: 69e71b1bbbf240f19f9776e82e70abba
msgid "4.3 Add executable"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:429
#: e86d778a86a549ea9ec9e9197a11fd5b
msgid "4.4 Build and run"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:431
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:589
#: 80e71f82074141ff9c47fa3c0b9c32e9 9212cbc898c14633a2f1fc65c935e959
msgid ""
"Navigate back to the root of your workspace, ``ros2_ws``, and build your "
"package."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:475
#: 8b46e4fbc0ee4085b224dd208cb19cdd
msgid ""
"If the ``timed_synthetic_bag`` directory already exists, you must first "
"delete it before running the node."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:483
#: f7f162f4ae4747c493637c25b69bb1ea
msgid ""
"Wait for 30 seconds or so, then terminate the node with :kbd:`ctrl-c`. "
"Next, play back the created bag."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:490
#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:649
#: 951f0c3ad06340c38d290f3dd2238b62 d4346c380f894ca7a4b91a8b899c0e01
msgid "Open a second terminal and echo the ``/synthetic`` topic."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:496
#: eb24bd04e657419d8f6f7f00c0776ed9
msgid ""
"You will see the data that was generated and stored in the bag printed to"
" the console at a rate of one message per second."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:499
#: a0b52d77ac17413ebed7337c486837c8
msgid "5 Record synthetic data from an executable"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:501
#: fe5429df79ed4182833b9fd7f73b227f
msgid ""
"Now that you can create a bag that stores data from a source other than a"
" topic, you will learn how to generate and record synthetic data from a "
"non-node executable. The advantage of this approach is simpler code and "
"rapid creation of a large quantity of data."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:505
#: 100b42f4534c47709d81d24772855218
msgid "5.1 Write a Python executable"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:507
#: 36f89070cc4a401bbc8ce8a7fbf5f518
msgid ""
"Inside the ``ros2_ws/src/bag_recorder_nodes_py/bag_recorder_nodes_py`` "
"directory, create a new file called ``data_generator_executable.py`` and "
"paste the following code into it."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:548
#: 6bbbbbf44c714c7aa41e6a7f43e2675a
msgid "5.2 Examine the code"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:550
#: bce5202f929842938fb67e4d5001ea17
msgid ""
"A comparison of this sample and the previous sample will reveal that they"
" are not that different. The only significant difference is the use of a "
"for loop to drive the data generation rather than a timer."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:553
#: 451e43e193fe4da1ae2ff5642df52797
msgid ""
"Notice that we are also now generating time stamps for the data rather "
"than relying on the current system time for each sample. The time stamp "
"can be any value you need it to be. The data will be played back at the "
"rate given by these time stamps, so this is a useful way to control the "
"default playback speed of the samples. Notice also that while the gap "
"between each sample is a full second in time, this executable does not "
"need to wait a second between each sample. This allows us to generate a "
"lot of data covering a wide span of time in much less time than playback "
"will take."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:572
#: 84daa039c58b4c8db435ecb47689265a
msgid "5.3 Add executable"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:587
#: a527eecb61b042529775483280f38051
msgid "5.4 Build and run"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:611
#: e24dd464d6694a4a85117fa6f0bb26fb
msgid "Open a terminal, navigate to ``ros2_ws``, and source the setup files."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:633
#: 8c4dcaaea48542b89ad73c4353be937a
msgid ""
"If the ``big_synthetic_bag`` directory already exists, you must first "
"delete it before running the executable."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:635
#: f99ebdf905d2419bb4e5bb2487679858
msgid "Now run the executable:"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:641
#: 96e9162174c54b7abc2a13a59a3f1934
msgid "Note that the executable runs and finishes very quickly."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:643
#: de38ef81c34c445ea9bdd026824b7197
msgid "Now play back the created bag."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:655
#: a3c13b8013864d0d964a64ad1af32608
msgid ""
"You will see the data that was generated and stored in the bag printed to"
" the console at a rate of one message per second. Even though the bag was"
" generated rapidly it is still played back at the rate the time stamps "
"indicate."
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:659
#: f547ebdfc329440e86e7792c208252a1
msgid "Summary"
msgstr ""

#: ../../source/Tutorials/Advanced/Recording-A-Bag-From-Your-Own-Node-Py.rst:661
#: 16ce973d25e94881a2c297034057a562
msgid ""
"You created a node that records data it receives on a topic into a bag. "
"You tested recording a bag using the node, and verified the data was "
"recorded by playing back the bag. This approach can be used to record a "
"bag with additional data than it received over a topic, for example with "
"results obtained from processing the received data. You then went on to "
"create a node and an executable to generate synthetic data and store it "
"in a bag. The latter approaches are useful especially for generating "
"synthetic data that can be used, for example, as training sets."
msgstr ""

