# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-08-19 11:55+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:8
#: 61f6be041e894e198493b8ed4a65a93b
msgid "Understanding the security keystore"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:10
#: ae145ffe38be41d99697d929879c3935
msgid "**Goal:** Explore files located in the ROS 2 security keystore."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:12
#: cf704159fbb04f67b4c1691cf1efa10c
msgid "**Tutorial level:** Advanced"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:14
#: 08ffaccae0b640cdb0e9808898babed5
msgid "**Time:** 15 minutes"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:19
#: 01ca5cf08b64450ca16bca29f0062ab2
msgid "Contents"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:22
#: a7449b02d7de4a0a9cb422354a50401e
msgid "Background"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:24
#: d7c01ba63f34475a814a10090c80a40c
msgid ""
"Before proceeding ensure you have completed the :doc:`Introducing-"
"ros2-security` tutorial."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:26
#: 7cd29afadfb2413f9f6e17d8183ff1fe
msgid ""
"The ``sros2`` package can be used to create keys, certificates and "
"policies necessary to enable ROS 2 security. However, the security "
"configuration is extrememly flexible. A basic understanding of the ROS 2 "
"Security Keystore will allow integration with an existing PKI (Public Key"
" Infrastructure) and managment of sensitive key materials consistent with"
" organizational policies."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:32
#: 80f2582ca6614760a475b1c83dfd3d74
msgid "Security Artifact Locations"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:34
#: 342be001e0b3449ca0cccaf9860a4873
msgid ""
"With communications security enabled in the prior tutorial, let's take a "
"look at the files which were created when security was enabled. These are"
" the files which make encryption possible."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:37
#: c9e720ad7d614194ad912829b0415ccc
msgid ""
"The ``sros2`` utilities (``ros2 security ...``) separate files into "
"public, private and enclave key materials."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:39
#: 6451a38ce5314668b40d1c14f25d6b00
msgid ""
"ROS uses the directory defined by the environmental variable "
"``ROS_SECURITY_KEYSTORE`` as the keystore. For this tutorial, we use the "
"directory ``~/sros2_demo/demo_keystore``."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:44
#: f11ddcac54be487283ce688ec24a1a4f
msgid "Public Key Materials"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:46
#: 8f8ec2399fda44f0b5ac12189049ea4c
msgid ""
"You will find three encryption certificates in the public directory at "
"``~/sros2_demo/demo_keystore/public``; however, the identity and "
"permissions certificates are actually just a link to the Certificate "
"Authority (CA) certificate."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:48
#: 060b84d70d6a4456a7f744c26f3fad60
msgid ""
"In a public key infrastructure, the `Certificate Authority "
"<https://en.wikipedia.org/wiki/Certificate_authority>`_ acts as a trust "
"anchor: it validates the identities and permissions of participants. For "
"ROS, that means all the nodes that participate in the ROS graph (which "
"may extend to an entire fleet of individual robots). By placing the "
"Certificate Authority's certificate (``ca.cert.pem``) in the proper "
"location on the robot, all ROS nodes can establish mutual trust with "
"other nodes using the same Certificate Authority."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:52
#: a7e444f3cfba44e8a2f68a3db8a33383
msgid ""
"Although in our tutorials we create a Certificate Authority on-the-fly, "
"in a production system this should be done according to a pre-defined "
"security plan. Typically the Certificate Authority for a production "
"system will be created off-line, and placed on the robot during initial "
"setup. It may be unique for each robot, or shared across a fleet of "
"robots all intended to trust each other."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:56
#: 73cbe421d0a648a0af0bccfa81ea1745
msgid ""
"DDS (and ROS, by extension) supports separation of identity and "
"permission trust chains, so each function has its own certificate "
"authority. In most cases a ROS system security plan does not require a "
"separation between these duties, so the security utilities generate a "
"single Certificate Authority which is used for both identity and "
"permissions."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:59
#: e4886d0d6c084a239fb50a82f1fa3893
msgid "Use ``openssl`` to view this x509 certificate and display it as text:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:66
#: de466f32d7884dac9601fc4f68560384
msgid "The output should look similar to the following::"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:103
#: a1e47d576b3d444bb2e86aba59e444c6
msgid "Some things to note about this CA certificate:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:100
#: 50dbb8dabfb14bc1a9167cda2a80fb71
msgid ""
"The certificate subject name ``sros2testCA`` is the default provided by "
"the ``sros2`` utilities."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:101
#: d86dd5cd470b4ae2b8eff045f16c4c3f
msgid "This certificate is valid for ten years from time of creation"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:102
#: 4fbb7015102f406abd9917cf6ccf0df5
msgid ""
"Like all certificates, this contains a public key used for public-private"
" key encryption"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:103
#: 39631012010047e1b63d1692f3199266
msgid ""
"As a Root Certificate Authority, this is a `self-signed certificate "
"<https://en.wikipedia.org/wiki/Self-signed_certificate>`_; i.e., it is "
"signed using its own private key."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:105
#: 430d1183a78d4a58a30b4388f955ac14
msgid ""
"Since this is a public certificate, it can be freely copied as needed to "
"establish trust throughout your ROS system."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:109
#: b7ba8ea5d79d45aab5ce0662a4c63952
msgid "Private Key Materials"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:111
#: be55af0cc2154246826d930f222fa3dd
msgid ""
"Private key materials can be found in the keystore directory "
"``~/sros2_demo/demo_keystore/private``. Similar to the ``public`` "
"directory, this contains one certificate authority key ``ca.key.pem`` and"
" symbolic links to it to be used as both an Identity and a Permissions CA"
" private key."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:116
#: 4607162f528041a791d6fdf07f0d1651
msgid "Protect this private key and create a secure backup of it!"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:118
#: 81f7b796b6b2458593851b1567c637d7
msgid ""
"This is the private key associated with the public Certificate Authority "
"which serves as the anchor for all security in your ROS system. You will "
"use it to modify encryption policies for the ROS graph and to add new ROS"
" participants. Depending upon your robot's security needs, the key can be"
" protected with access permissions and locked down to another account, or"
" it can be moved off the robot entirely and onto another system or "
"device. If the file is lost, you will be unable to change access "
"permissions and add new participants to the system. Similarly, any user "
"or process with access to the file has the ability to modify system "
"policies and participants."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:124
#: a1827d728379415fb14ee206439518d9
msgid ""
"This file is only required for configuring the robot, but is not needed "
"for the robot to run. It can safely be stored offline in another system "
"or removable media."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:127
#: d2abd6e0e86e4706a8ade8d75ed975dd
msgid ""
"The ``sros2`` utilities use `elliptic curve cryptograpy "
"<https://en.wikipedia.org/wiki/Elliptic-curve_cryptography>`_ rather than"
" RSA for improved security and reduced key size. Use the following "
"command to show details about this elliptic curve private key:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:136
#: e6c85c30a7804ecaa7dedc0650b9c8c1
msgid "Your output should look similar to the following::"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:153
#: c8fb66d415ca45bb91f966f549128a2d
msgid ""
"In addition to the private key itself, note that the public key is "
"listed, and it matches the public key listed in the Certificate Authority"
" ``ca.cert.pem``."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:157
#: 1bc42c501b4d4a9d9d060e6748a9ef4e
msgid "Domain Governance Policy"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:159
#: f00b5aa4dedc402b965a11a8b97a0228
msgid ""
"Find the domain governance policy in the enclave directory within the "
"keystore, ``~/sros2_demo/demo_keystore/enclaves``. The ``enclave`` "
"directory contains XML governance policy document ``governance.xml``, as "
"well as a copy of the document which has been signed by the Permissions "
"CA as ``governance.p7s``."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:162
#: 7cc49b2b9a5b46849b65a7c67ff8492a
msgid ""
"The ``governance.p7s`` file contains domain-wide settings such as how to "
"handle unauthenticated participants, whether to encrypt discovery, and "
"default rules for access to topics."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:164
#: 18a58c224f1741aa9d88a12556779af9
msgid ""
"Use the following command to validate the `S/MIME signature "
"<https://en.wikipedia.org/wiki/S/MIME>`_ of the governance file:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:170
#: 642adde15cbe4ee39c35e683469811b8
msgid ""
"This command will print out the XML document, and the last line will be "
"``Verification successful`` to show that the document was properly signed"
" by the Permissions CA."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:174
#: 528f7852807c4b7991da534b4fba9107
msgid "Security Enclaves"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:176
#: dece92d0aeae47748188489b820b7a9d
msgid ""
"Secure processes (typically ROS nodes) run within a security enclave. In "
"the simplest case, all the processes can be consolidated into the same "
"enclave, and all processes will then use the same security policy. "
"However, to apply different policies to different processes, the "
"processes can use different security enclaves when starting. For more "
"details about security enclaves, see the `design document "
"<https://design.ros2.org/articles/ros2_security_enclaves.html>`_. The "
"security enclave is specifed by using the ROS argument ``--enclave`` when"
" running a node."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:182
#: f660c44ccedc42258addc8a8e35bd7ff
msgid ""
"**Each security enclave requires six files** in order to enable security."
" Each file **must** be named as defined below, and as outlined in the "
"`DDS Security standard <https://www.omg.org/spec/DDS-SECURITY/1.1/About-"
"DDS-SECURITY/>`_. In order to avoid having mulitple copies of the same "
"files, the ``sros2`` utilities create links for each enclave to the "
"single governance policy, the Identity CA and Permissions CA descibed "
"above."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:186
#: 152e6f622aae4190ab72ac6717428e89
msgid ""
"See the following six files within the ``listener`` enclave. Three are "
"specific to this enclave, while three are generic to this ROS system:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:189
#: 6ada7e7d224a4b4d84bd73d6a9014543
msgid ""
"``key.pem``, the private key used to encrypt and decrypt within this "
"enclave"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:190
#: 565083b259d5454daeafc9b636d9c329
msgid ""
"``cert.pem``, the public certificate for this enclave; this certificate "
"has been signed by the Identity CA"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:191
#: 796166227e6442aeac640d3befc3b9db
msgid ""
"``permissions.p7s``, the permissions for this enclave; this file has been"
" signed with the Permissions CA"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:192
#: 3a71058137024f45b1a64d6d01d99dc5
msgid ""
"``governance.p7s``, a link to the signed security policy file for this "
"domain"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:193
#: 805498c77a574b539b13a9c714e48fc9
msgid "``identity_ca.cert.pem``, a link to the Identity CA for this domain"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:194
#: f6b6214bac434cb987062e4efb08facf
msgid "``permissions_ca.cert.pem``, a link to the Permissions CA for this domain"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:196
#: b5458b4c75814d5aa539f542496f4518
msgid ""
"The private encryption key ``key.pem`` should be protected according to "
"your security plan. This key encrypts, decrypts and validates "
"communications within this specific enclave. Should the key be lost or "
"stolen, revoke the key and create a new identity for this enclave."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:200
#: 6baba52ac87f451d80e40325e189e47f
msgid ""
"The file ``permissions.xml`` has also been created in this directory and "
"can be used to recreate the signed permissions file. However, this file "
"is not required to enable security since DDS uses the signed version of "
"the file instead."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:205
#: 6ee40f39760a4ecba1d26d8a5030af63
msgid "Take the quiz!"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:207
#: cfa2b5354c7f4f188356b4ad5d437c6c
msgid ""
"See if you can answer these questions about the ROS security keystore. "
"Begin with a new terminal session and enable security with the keystore "
"created in the prior tutorial:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:218
#: dd891f1729be4d22bdf2426ab82136ab
msgid "Make a backup copy of ``permissions.p7s`` before beginning."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:222
#: bc1dcdde92b84b77a76a3cfc3e4bcb80
msgid "Question 1"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:224
#: 52b6efed95cf4acb86db2de5f9f24258
msgid ""
"Open ``permissions.p7s`` in a text editor. Make a negligible change to "
"the XML content (e.g., add a space or a blank line) and save the file. "
"Launch the listener node:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:231
#: 1cc80ff84a044228aad5aaa9835801bb
msgid "What do you expect to happen?"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:233
#: 788baebfd21f49a8be93f5ffa114fca9
msgid "Can you launch the talker node?"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:239
#: 091eeac856ba4c66b4b9f3f9bc627d05
msgid ""
"What is the difference between launching the listener and launching the "
"talker?"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:241
#: 07cb8df7c2824cb0a044e05346de02c8
msgid "Answer 1"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:243
#: 2aeedbdbf2b74528bdd81064ffc0c2ce
msgid ""
"The listener fails to launch and throws an error. When the "
"``permissions.p7s`` file was modified--however minor--the file's "
"signature became invalid. A node will not launch with security enabled "
"and enforced when the permissions file is invalid."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:247
#: d4a9ab6eeb7a482d8e02fba174d48dbe
msgid ""
"The talker will start as expected. It uses the ``permissions.p7s`` file "
"in a different enclave, and the file is still valid."
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:252
#: dc4e1b06ad2b4ffea79d5d9abb69880c
msgid "Question 2"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:254
#: 937dd28ddafb4e9d9ae10ce057a78bec
msgid ""
"What command lets you check to see if the signature on the modified "
"``permissions.p7s`` file is valid?"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:256
#: 76f644ce24f5449db2018eb269b1272b
msgid "Answer 2"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:258
#: cccf1d9780194f7695bb30d8cf4bc3bb
msgid ""
"Check that ``permissions.p7s`` has been properly signed by the "
"Permissions CA using the ``openssl smime`` command:"
msgstr ""

#: ../../source/Tutorials/Advanced/Security/The-Keystore.rst:264
#: 52d2f240e6ba4f1ca85077e734c8ff90
msgid ""
"Restore your original, properly signed ``permissions.p7s`` file before "
"proceeding to the next tutorial."
msgstr ""

